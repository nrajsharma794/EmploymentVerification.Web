"use strict"; var service = { props: { contentType: { application: { json: "application/json; charset=utf-8" } }, dataType: { json: "json", jsonp: "jsonp" } }, httpGet: function (a, b) { return $.ajax({ url: $.trim("/" + a + "/" + b), type: "GET", data: {}, dataType: service.props.dataType.json, contentType: service.props.contentType.application.json }) }, httpGetX: function (a) { return $.ajax({ url: $.trim(a), type: "GET", data: {}, dataType: service.props.dataType.json, contentType: service.props.contentType.application.json }) }, httpPost: function (a, b, c) { return $.ajax({ method: "POST", url: $.trim("/" + b + "/" + c), data: a, contentType: service.props.contentType.application.json, dataType: service.props.dataType.json, crossDomain: !0, xhrFields: { withCredentials: !0 } }) }, httpPostDocument: function (a, b, c) { return $.ajax({ method: "POST", url: $.trim("/" + b + "/" + c), data: a, contentType: !1, processData: !1 }) }, httpPostFiles: function (a, b) { return $.ajax({ method: "POST", url: $.trim(b), data: a, contentType: !1, processData: !1 }) }, httpPostX: function (a, b) { return $.ajax({ method: "POST", url: $.trim("/" + b), data: a, contentType: service.props.contentType.application.json, dataType: service.props.dataType.json, crossDomain: !0, timeout: 5e5, async: !1 });} };